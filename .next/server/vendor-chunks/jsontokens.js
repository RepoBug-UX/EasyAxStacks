"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsontokens";
exports.ids = ["vendor-chunks/jsontokens"];
exports.modules = {

/***/ "(ssr)/./node_modules/jsontokens/lib/base64Url.js":
/*!**************************************************!*\
  !*** ./node_modules/jsontokens/lib/base64Url.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.encode = exports.unescape = exports.escape = exports.pad = void 0;\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nfunction pad(base64) {\n    return `${base64}${'='.repeat(4 - (base64.length % 4 || 4))}`;\n}\nexports.pad = pad;\nfunction escape(base64) {\n    return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexports.escape = escape;\nfunction unescape(base64Url) {\n    return pad(base64Url).replace(/-/g, '+').replace(/_/g, '/');\n}\nexports.unescape = unescape;\nfunction encode(base64) {\n    return escape((0, base64_js_1.fromByteArray)(new TextEncoder().encode(base64)));\n}\nexports.encode = encode;\nfunction decode(base64Url) {\n    return new TextDecoder().decode((0, base64_js_1.toByteArray)(pad(unescape(base64Url))));\n}\nexports.decode = decode;\n//# sourceMappingURL=base64Url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvYmFzZTY0VXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsY0FBYyxHQUFHLFdBQVc7QUFDakYsb0JBQW9CLG1CQUFPLENBQUMsMERBQVc7QUFDdkM7QUFDQSxjQUFjLE9BQU8sRUFBRSx5Q0FBeUM7QUFDaEU7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyIvVXNlcnMvZ2FicmllbC9EZXNrdG9wL2hhY2thdGhvbi9FYXN5QXhTdGFja3MtSGFja2F0aG9uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9iYXNlNjRVcmwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy51bmVzY2FwZSA9IGV4cG9ydHMuZXNjYXBlID0gZXhwb3J0cy5wYWQgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjRfanNfMSA9IHJlcXVpcmUoXCJiYXNlNjQtanNcIik7XG5mdW5jdGlvbiBwYWQoYmFzZTY0KSB7XG4gICAgcmV0dXJuIGAke2Jhc2U2NH0keyc9Jy5yZXBlYXQoNCAtIChiYXNlNjQubGVuZ3RoICUgNCB8fCA0KSl9YDtcbn1cbmV4cG9ydHMucGFkID0gcGFkO1xuZnVuY3Rpb24gZXNjYXBlKGJhc2U2NCkge1xuICAgIHJldHVybiBiYXNlNjQucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJyk7XG59XG5leHBvcnRzLmVzY2FwZSA9IGVzY2FwZTtcbmZ1bmN0aW9uIHVuZXNjYXBlKGJhc2U2NFVybCkge1xuICAgIHJldHVybiBwYWQoYmFzZTY0VXJsKS5yZXBsYWNlKC8tL2csICcrJykucmVwbGFjZSgvXy9nLCAnLycpO1xufVxuZXhwb3J0cy51bmVzY2FwZSA9IHVuZXNjYXBlO1xuZnVuY3Rpb24gZW5jb2RlKGJhc2U2NCkge1xuICAgIHJldHVybiBlc2NhcGUoKDAsIGJhc2U2NF9qc18xLmZyb21CeXRlQXJyYXkpKG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShiYXNlNjQpKSk7XG59XG5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbmZ1bmN0aW9uIGRlY29kZShiYXNlNjRVcmwpIHtcbiAgICByZXR1cm4gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKCgwLCBiYXNlNjRfanNfMS50b0J5dGVBcnJheSkocGFkKHVuZXNjYXBlKGJhc2U2NFVybCkpKSk7XG59XG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NFVybC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/base64Url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js":
/*!************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cryptoClients = exports.SECP256K1Client = void 0;\nconst secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\");\nObject.defineProperty(exports, \"SECP256K1Client\", ({ enumerable: true, get: function () { return secp256k1_1.SECP256K1Client; } }));\nconst cryptoClients = {\n    ES256K: secp256k1_1.SECP256K1Client,\n};\nexports.cryptoClients = cryptoClients;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDL0Msb0JBQW9CLG1CQUFPLENBQUMsbUZBQWE7QUFDekMsbURBQWtELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiL1VzZXJzL2dhYnJpZWwvRGVza3RvcC9oYWNrYXRob24vRWFzeUF4U3RhY2tzLUhhY2thdGhvbi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3J5cHRvQ2xpZW50cyA9IGV4cG9ydHMuU0VDUDI1NksxQ2xpZW50ID0gdm9pZCAwO1xuY29uc3Qgc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTRUNQMjU2SzFDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlY3AyNTZrMV8xLlNFQ1AyNTZLMUNsaWVudDsgfSB9KTtcbmNvbnN0IGNyeXB0b0NsaWVudHMgPSB7XG4gICAgRVMyNTZLOiBzZWNwMjU2azFfMS5TRUNQMjU2SzFDbGllbnQsXG59O1xuZXhwb3J0cy5jcnlwdG9DbGllbnRzID0gY3J5cHRvQ2xpZW50cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/secp256k1.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SECP256K1Client = void 0;\nconst hmac_1 = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/./node_modules/@noble/hashes/hmac.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst secp = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/index.js\");\nconst ecdsaSigFormatter_1 = __webpack_require__(/*! ../ecdsaSigFormatter */ \"(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/utils.js\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nclass SECP256K1Client {\n    static derivePublicKey(privateKey, compressed = true) {\n        if (privateKey.length === 66) {\n            privateKey = privateKey.slice(0, 64);\n        }\n        if (privateKey.length < 64) {\n            // backward compatibly accept too short private keys\n            privateKey = privateKey.padStart(64, '0');\n        }\n        return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n    static signHash(signingInputHash, privateKey, format = 'jose') {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !privateKey) {\n            throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n        }\n        const derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n            der: true,\n            canonical: false,\n        });\n        if (format === 'der')\n            return (0, utils_1.bytesToHex)(derSignature);\n        if (format === 'jose')\n            return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n        throw Error('Invalid signature format');\n    }\n    static loadSignature(joseSignature) {\n        // create and return the DER-formatted signature bytes\n        return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n    static verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !derSignatureBytes || !publicKey) {\n            throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n        }\n        return secp.verify(derSignatureBytes, signingInputHash, publicKey, { strict: false });\n    }\n}\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDdkMsNEJBQTRCLG1CQUFPLENBQUMsc0ZBQXNCO0FBQzFELGlCQUFpQixtQkFBTyxDQUFDLGdFQUFXO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsZUFBZTtBQUM1RjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYWJyaWVsL0Rlc2t0b3AvaGFja2F0aG9uL0Vhc3lBeFN0YWNrcy1IYWNrYXRob24vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2NyeXB0b0NsaWVudHMvc2VjcDI1NmsxLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TRUNQMjU2SzFDbGllbnQgPSB2b2lkIDA7XG5jb25zdCBobWFjXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9obWFjXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5jb25zdCBzZWNwID0gcmVxdWlyZShcIkBub2JsZS9zZWNwMjU2azFcIik7XG5jb25zdCBlY2RzYVNpZ0Zvcm1hdHRlcl8xID0gcmVxdWlyZShcIi4uL2VjZHNhU2lnRm9ybWF0dGVyXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi4vZXJyb3JzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCIpO1xuLy8gcmVxdWlyZWQgdG8gdXNlIG5vYmxlIHNlY3AgaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1zZWNwMjU2azFcbnNlY3AudXRpbHMuaG1hY1NoYTI1NlN5bmMgPSAoa2V5LCAuLi5tc2dzKSA9PiB7XG4gICAgY29uc3QgaCA9IGhtYWNfMS5obWFjLmNyZWF0ZShzaGEyNTZfMS5zaGEyNTYsIGtleSk7XG4gICAgbXNncy5mb3JFYWNoKG1zZyA9PiBoLnVwZGF0ZShtc2cpKTtcbiAgICByZXR1cm4gaC5kaWdlc3QoKTtcbn07XG5jbGFzcyBTRUNQMjU2SzFDbGllbnQge1xuICAgIHN0YXRpYyBkZXJpdmVQdWJsaWNLZXkocHJpdmF0ZUtleSwgY29tcHJlc3NlZCA9IHRydWUpIHtcbiAgICAgICAgaWYgKHByaXZhdGVLZXkubGVuZ3RoID09PSA2Nikge1xuICAgICAgICAgICAgcHJpdmF0ZUtleSA9IHByaXZhdGVLZXkuc2xpY2UoMCwgNjQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcml2YXRlS2V5Lmxlbmd0aCA8IDY0KSB7XG4gICAgICAgICAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmx5IGFjY2VwdCB0b28gc2hvcnQgcHJpdmF0ZSBrZXlzXG4gICAgICAgICAgICBwcml2YXRlS2V5ID0gcHJpdmF0ZUtleS5wYWRTdGFydCg2NCwgJzAnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkoc2VjcC5nZXRQdWJsaWNLZXkocHJpdmF0ZUtleSwgY29tcHJlc3NlZCkpO1xuICAgIH1cbiAgICBzdGF0aWMgc2lnbkhhc2goc2lnbmluZ0lucHV0SGFzaCwgcHJpdmF0ZUtleSwgZm9ybWF0ID0gJ2pvc2UnKSB7XG4gICAgICAgIC8vIG1ha2Ugc3VyZSB0aGUgcmVxdWlyZWQgcGFyYW1ldGVycyBhcmUgcHJvdmlkZWRcbiAgICAgICAgaWYgKCFzaWduaW5nSW5wdXRIYXNoIHx8ICFwcml2YXRlS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuTWlzc2luZ1BhcmFtZXRlcnNFcnJvcignYSBzaWduaW5nIGlucHV0IGhhc2ggYW5kIHByaXZhdGUga2V5IGFyZSBhbGwgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZXJTaWduYXR1cmUgPSBzZWNwLnNpZ25TeW5jKHNpZ25pbmdJbnB1dEhhc2gsIHByaXZhdGVLZXkuc2xpY2UoMCwgNjQpLCB7XG4gICAgICAgICAgICBkZXI6IHRydWUsXG4gICAgICAgICAgICBjYW5vbmljYWw6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gJ2RlcicpXG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkoZGVyU2lnbmF0dXJlKTtcbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gJ2pvc2UnKVxuICAgICAgICAgICAgcmV0dXJuICgwLCBlY2RzYVNpZ0Zvcm1hdHRlcl8xLmRlclRvSm9zZSkoZGVyU2lnbmF0dXJlLCAnRVMyNTYnKTtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIGZvcm1hdCcpO1xuICAgIH1cbiAgICBzdGF0aWMgbG9hZFNpZ25hdHVyZShqb3NlU2lnbmF0dXJlKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBhbmQgcmV0dXJuIHRoZSBERVItZm9ybWF0dGVkIHNpZ25hdHVyZSBieXRlc1xuICAgICAgICByZXR1cm4gKDAsIGVjZHNhU2lnRm9ybWF0dGVyXzEuam9zZVRvRGVyKShqb3NlU2lnbmF0dXJlLCAnRVMyNTYnKTtcbiAgICB9XG4gICAgc3RhdGljIHZlcmlmeUhhc2goc2lnbmluZ0lucHV0SGFzaCwgZGVyU2lnbmF0dXJlQnl0ZXMsIHB1YmxpY0tleSkge1xuICAgICAgICAvLyBtYWtlIHN1cmUgdGhlIHJlcXVpcmVkIHBhcmFtZXRlcnMgYXJlIHByb3ZpZGVkXG4gICAgICAgIGlmICghc2lnbmluZ0lucHV0SGFzaCB8fCAhZGVyU2lnbmF0dXJlQnl0ZXMgfHwgIXB1YmxpY0tleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBpbnB1dCBoYXNoLCBkZXIgc2lnbmF0dXJlLCBhbmQgcHVibGljIGtleSBhcmUgYWxsIHJlcXVpcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlY3AudmVyaWZ5KGRlclNpZ25hdHVyZUJ5dGVzLCBzaWduaW5nSW5wdXRIYXNoLCBwdWJsaWNLZXksIHsgc3RyaWN0OiBmYWxzZSB9KTtcbiAgICB9XG59XG5leHBvcnRzLlNFQ1AyNTZLMUNsaWVudCA9IFNFQ1AyNTZLMUNsaWVudDtcblNFQ1AyNTZLMUNsaWVudC5hbGdvcml0aG1OYW1lID0gJ0VTMjU2Syc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWNwMjU2azEuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js":
/*!*************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/sha256.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nfunction hashSha256(input) {\n    return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', bytes);\n                return new Uint8Array(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = __webpack_require__(/*! crypto */ \"crypto\");\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zaGEyNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyIvVXNlcnMvZ2FicmllbC9EZXNrdG9wL2hhY2thdGhvbi9FYXN5QXhTdGFja3MtSGFja2F0aG9uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL3NoYTI1Ni5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYXNoU2hhMjU2QXN5bmMgPSBleHBvcnRzLmhhc2hTaGEyNTYgPSB2b2lkIDA7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmZ1bmN0aW9uIGhhc2hTaGEyNTYoaW5wdXQpIHtcbiAgICByZXR1cm4gKDAsIHNoYTI1Nl8xLnNoYTI1NikoaW5wdXQpO1xufVxuZXhwb3J0cy5oYXNoU2hhMjU2ID0gaGFzaFNoYTI1NjtcbmZ1bmN0aW9uIGhhc2hTaGEyNTZBc3luYyhpbnB1dCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpc1N1YnRsZUNyeXB0b0F2YWlsYWJsZSA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjcnlwdG8uc3VidGxlICE9PSAndW5kZWZpbmVkJztcbiAgICAgICAgICAgIGlmIChpc1N1YnRsZUNyeXB0b0F2YWlsYWJsZSkge1xuICAgICAgICAgICAgICAgIC8vIFVzZSB0aGUgVzNDIFdlYiBDcnlwdG8gQVBJIGlmIGF2YWlsYWJsZSAocnVubmluZyBpbiBhIHdlYiBicm93c2VyKS5cbiAgICAgICAgICAgICAgICBjb25zdCBieXRlcyA9IHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycgPyBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpIDogaW5wdXQ7XG4gICAgICAgICAgICAgICAgY29uc3QgaGFzaCA9IHlpZWxkIGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgYnl0ZXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShoYXNoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIE90aGVyd2lzZSB0cnkgbG9hZGluZyB0aGUgTm9kZS5qcyBgY3J5cHRvYCBtb2R1bGUgKHJ1bm5pbmcgaW4gTm9kZS5qcywgb3IgYW4gb2xkZXIgYnJvd3NlciB3aXRoIGEgcG9seWZpbGwpLlxuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVDcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbiAgICAgICAgICAgICAgICBpZiAoIW5vZGVDcnlwdG8uY3JlYXRlSGFzaCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BjcnlwdG9gIG1vZHVsZSBkb2VzIG5vdCBjb250YWluIGBjcmVhdGVIYXNoYCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5vZGVDcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ3J5cHRvIGxpYiBub3QgZm91bmQuIE5laXRoZXIgdGhlIGdsb2JhbCBgY3J5cHRvLnN1YnRsZWAgV2ViIENyeXB0byBBUEksICcgK1xuICAgICAgICAgICAgICAgICdub3IgdGhlIG9yIHRoZSBOb2RlLmpzIGByZXF1aXJlKFwiY3J5cHRvXCIpLmNyZWF0ZUhhc2hgIG1vZHVsZSBpcyBhdmFpbGFibGUuICcgK1xuICAgICAgICAgICAgICAgICdGYWxsaW5nIGJhY2sgdG8gSlMgaW1wbGVtZW50YXRpb24uJyk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGhhc2hTaGEyNTYoaW5wdXQpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5oYXNoU2hhMjU2QXN5bmMgPSBoYXNoU2hhMjU2QXN5bmM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEyNTYuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/decode.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/decode.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction decodeToken(token) {\n    if (typeof token === 'string') {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        const header = JSON.parse(base64url.decode(tokenParts[0]));\n        const payload = JSON.parse(base64url.decode(tokenParts[1]));\n        const signature = tokenParts[2];\n        // return the token object\n        return {\n            header: header,\n            payload: payload,\n            signature: signature,\n        };\n    }\n    else if (typeof token === 'object') {\n        if (typeof token.payload !== 'string') {\n            throw new Error('Expected token payload to be a base64 or json string');\n        }\n        let payload = token.payload;\n        if (token.payload[0] !== '{') {\n            payload = base64url.decode(payload);\n        }\n        const allHeaders = [];\n        token.header.map((headerValue) => {\n            const header = JSON.parse(base64url.decode(headerValue));\n            allHeaders.push(header);\n        });\n        return {\n            header: allHeaders,\n            payload: JSON.parse(payload),\n            signature: token.signature,\n        };\n    }\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyxxRUFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYWJyaWVsL0Rlc2t0b3AvaGFja2F0aG9uL0Vhc3lBeFN0YWNrcy1IYWNrYXRob24vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2RlY29kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlVG9rZW4gPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmwgPSByZXF1aXJlKFwiLi9iYXNlNjRVcmxcIik7XG5mdW5jdGlvbiBkZWNvZGVUb2tlbih0b2tlbikge1xuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIGRlY29tcG9zZSB0aGUgdG9rZW4gaW50byBwYXJ0c1xuICAgICAgICBjb25zdCB0b2tlblBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKHRva2VuUGFydHNbMF0pKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZSh0b2tlblBhcnRzWzFdKSk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRva2VuUGFydHNbMl07XG4gICAgICAgIC8vIHJldHVybiB0aGUgdG9rZW4gb2JqZWN0XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBoZWFkZXI6IGhlYWRlcixcbiAgICAgICAgICAgIHBheWxvYWQ6IHBheWxvYWQsXG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHRva2VuID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAodHlwZW9mIHRva2VuLnBheWxvYWQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRva2VuIHBheWxvYWQgdG8gYmUgYSBiYXNlNjQgb3IganNvbiBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcGF5bG9hZCA9IHRva2VuLnBheWxvYWQ7XG4gICAgICAgIGlmICh0b2tlbi5wYXlsb2FkWzBdICE9PSAneycpIHtcbiAgICAgICAgICAgIHBheWxvYWQgPSBiYXNlNjR1cmwuZGVjb2RlKHBheWxvYWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFsbEhlYWRlcnMgPSBbXTtcbiAgICAgICAgdG9rZW4uaGVhZGVyLm1hcCgoaGVhZGVyVmFsdWUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZShoZWFkZXJWYWx1ZSkpO1xuICAgICAgICAgICAgYWxsSGVhZGVycy5wdXNoKGhlYWRlcik7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGVhZGVyOiBhbGxIZWFkZXJzLFxuICAgICAgICAgICAgcGF5bG9hZDogSlNPTi5wYXJzZShwYXlsb2FkKSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogdG9rZW4uc2lnbmF0dXJlLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuZGVjb2RlVG9rZW4gPSBkZWNvZGVUb2tlbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js":
/*!**********************************************************!*\
  !*** ./node_modules/jsontokens/lib/ecdsaSigFormatter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//  NOTICE\n//  Copyright 2015 D2L Corporation\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.joseToDer = exports.derToJose = void 0;\n// The following code is adapted from https://github.com/Brightspace/node-ecdsa-sig-formatter\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nconst base64Url_1 = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction getParamSize(keySize) {\n    return ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n}\nconst paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(521),\n};\nfunction getParamBytesForAlg(alg) {\n    const paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n    throw new Error(`Unknown algorithm \"${alg}\"`);\n}\nconst MAX_OCTET = 0x80;\nconst CLASS_UNIVERSAL = 0;\nconst PRIMITIVE_BIT = 0x20;\nconst TAG_SEQ = 0x10;\nconst TAG_INT = 0x02;\nconst ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | (CLASS_UNIVERSAL << 6);\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\nfunction signatureAsBytes(signature) {\n    if (signature instanceof Uint8Array) {\n        return signature;\n    }\n    else if ('string' === typeof signature) {\n        return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(signature));\n    }\n    throw new TypeError('ECDSA signature must be a Base64 string or a Uint8Array');\n}\nfunction derToJose(signature, alg) {\n    const signatureBytes = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    // the DER encoded param should at most be the param size, plus a padding\n    // zero, since due to being a signed integer\n    const maxEncodedParamLength = paramBytes + 1;\n    const inputLength = signatureBytes.length;\n    let offset = 0;\n    if (signatureBytes[offset++] !== ENCODED_TAG_SEQ) {\n        throw new Error('Could not find expected \"seq\"');\n    }\n    let seqLength = signatureBytes[offset++];\n    if (seqLength === (MAX_OCTET | 1)) {\n        seqLength = signatureBytes[offset++];\n    }\n    if (inputLength - offset < seqLength) {\n        throw new Error(`\"seq\" specified length of \"${seqLength}\", only \"${inputLength - offset}\" remaining`);\n    }\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"r\"');\n    }\n    const rLength = signatureBytes[offset++];\n    if (inputLength - offset - 2 < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`);\n    }\n    if (maxEncodedParamLength < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const rOffset = offset;\n    offset += rLength;\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"s\"');\n    }\n    const sLength = signatureBytes[offset++];\n    if (inputLength - offset !== sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`);\n    }\n    if (maxEncodedParamLength < sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const sOffset = offset;\n    offset += sLength;\n    if (offset !== inputLength) {\n        throw new Error(`Expected to consume entire array, but \"${inputLength - offset}\" bytes remain`);\n    }\n    const rPadding = paramBytes - rLength;\n    const sPadding = paramBytes - sLength;\n    const dst = new Uint8Array(rPadding + rLength + sPadding + sLength);\n    for (offset = 0; offset < rPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(rOffset + Math.max(-rPadding, 0), rOffset + rLength), offset);\n    offset = paramBytes;\n    for (const o = offset; offset < o + sPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(sOffset + Math.max(-sPadding, 0), sOffset + sLength), offset);\n    return (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(dst));\n}\nexports.derToJose = derToJose;\nfunction countPadding(buf, start, stop) {\n    let padding = 0;\n    while (start + padding < stop && buf[start + padding] === 0) {\n        ++padding;\n    }\n    const needsSign = buf[start + padding] >= MAX_OCTET;\n    if (needsSign) {\n        --padding;\n    }\n    return padding;\n}\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    const signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`);\n    }\n    const rPadding = countPadding(signature, 0, paramBytes);\n    const sPadding = countPadding(signature, paramBytes, signature.length);\n    const rLength = paramBytes - rPadding;\n    const sLength = paramBytes - sPadding;\n    const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n    const shortLength = rsBytes < MAX_OCTET;\n    const dst = new Uint8Array((shortLength ? 2 : 3) + rsBytes);\n    let offset = 0;\n    dst[offset++] = ENCODED_TAG_SEQ;\n    if (shortLength) {\n        // Bit 8 has value \"0\"\n        // bits 7-1 give the length.\n        dst[offset++] = rsBytes;\n    }\n    else {\n        // Bit 8 of first octet has value \"1\"\n        // bits 7-1 give the number of additional length octets.\n        dst[offset++] = MAX_OCTET | 1;\n        // length, base 256\n        dst[offset++] = rsBytes & 0xff;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = rLength;\n    if (rPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(0, paramBytes), offset);\n        offset += paramBytes;\n    }\n    else {\n        dst.set(signature.subarray(rPadding, paramBytes), offset);\n        offset += paramBytes - rPadding;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = sLength;\n    if (sPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(paramBytes), offset);\n    }\n    else {\n        dst.set(signature.subarray(paramBytes + sPadding), offset);\n    }\n    return dst;\n}\nexports.joseToDer = joseToDer;\n//# sourceMappingURL=ecdsaSigFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.MissingParametersError = void 0;\nclass MissingParametersError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'MissingParametersError';\n        this.message = message || '';\n    }\n}\nexports.MissingParametersError = MissingParametersError;\nclass InvalidTokenError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'InvalidTokenError';\n        this.message = message || '';\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDhCQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsiL1VzZXJzL2dhYnJpZWwvRGVza3RvcC9oYWNrYXRob24vRWFzeUF4U3RhY2tzLUhhY2thdGhvbi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkVG9rZW5FcnJvciA9IGV4cG9ydHMuTWlzc2luZ1BhcmFtZXRlcnNFcnJvciA9IHZvaWQgMDtcbmNsYXNzIE1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnTWlzc2luZ1BhcmFtZXRlcnNFcnJvcic7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgJyc7XG4gICAgfVxufVxuZXhwb3J0cy5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yID0gTWlzc2luZ1BhcmFtZXRlcnNFcnJvcjtcbmNsYXNzIEludmFsaWRUb2tlbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRUb2tlbkVycm9yJztcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCAnJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gSW52YWxpZFRva2VuRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jsontokens/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/jsontokens/lib/signer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./verifier */ \"(ssr)/./node_modules/jsontokens/lib/verifier.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/jsontokens/lib/decode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRUFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsK0RBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDdEMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYWJyaWVsL0Rlc2t0b3AvaGFja2F0aG9uL0Vhc3lBeFN0YWNrcy1IYWNrYXRob24vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92ZXJpZmllclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVjb2RlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/signer.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/signer.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenSigner = exports.createUnsecuredToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nfunction createSigningInput(payload, header) {\n    const tokenParts = [];\n    // add in the header\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n    // add in the payload\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n    // prepare the message\n    const signingInput = tokenParts.join('.');\n    // return the signing input\n    return signingInput;\n}\nfunction createUnsecuredToken(payload) {\n    const header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\nexports.createUnsecuredToken = createUnsecuredToken;\nclass TokenSigner {\n    constructor(signingAlgorithm, rawPrivateKey) {\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw new Error('signing algorithm parameter must be a string');\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw new Error('invalid signing algorithm');\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n    header(header = {}) {\n        const defaultHeader = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };\n        return Object.assign({}, defaultHeader, header);\n    }\n    sign(payload, expanded = false, customHeader = {}) {\n        // generate the token header\n        const header = this.header(customHeader);\n        // prepare the message to be signed\n        const signingInput = createSigningInput(payload, header);\n        const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n        return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n    }\n    signAsync(payload, expanded = false, customHeader = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // generate the token header\n            const header = this.header(customHeader);\n            // prepare the message to be signed\n            const signingInput = createSigningInput(payload, header);\n            const signingInputHash = yield (0, sha256_1.hashSha256Async)(signingInput);\n            return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n        });\n    }\n    createWithSignedHash(payload, expanded, header, signingInput, signingInputHash) {\n        // sign the message and add in the signature\n        const signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n        if (expanded) {\n            const signedToken = {\n                header: [base64url.encode(JSON.stringify(header))],\n                payload: JSON.stringify(payload),\n                signature: [signature],\n            };\n            return signedToken;\n        }\n        else {\n            return [signingInput, signature].join('.');\n        }\n    }\n}\nexports.TokenSigner = TokenSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvc2lnbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyw0QkFBNEI7QUFDbEQsa0JBQWtCLG1CQUFPLENBQUMscUVBQWE7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMsbUZBQWlCO0FBQ2pELGlCQUFpQixtQkFBTyxDQUFDLCtEQUFVO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLDJGQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsZ0NBQWdDO0FBQ2hDLCtCQUErQjtBQUMvQjtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvZ2FicmllbC9EZXNrdG9wL2hhY2thdGhvbi9FYXN5QXhTdGFja3MtSGFja2F0aG9uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9zaWduZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVG9rZW5TaWduZXIgPSBleHBvcnRzLmNyZWF0ZVVuc2VjdXJlZFRva2VuID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4vYmFzZTY0VXJsXCIpO1xuY29uc3QgY3J5cHRvQ2xpZW50c18xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50c1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzL3NoYTI1NlwiKTtcbmZ1bmN0aW9uIGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpIHtcbiAgICBjb25zdCB0b2tlblBhcnRzID0gW107XG4gICAgLy8gYWRkIGluIHRoZSBoZWFkZXJcbiAgICBjb25zdCBlbmNvZGVkSGVhZGVyID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeShoZWFkZXIpKTtcbiAgICB0b2tlblBhcnRzLnB1c2goZW5jb2RlZEhlYWRlcik7XG4gICAgLy8gYWRkIGluIHRoZSBwYXlsb2FkXG4gICAgY29uc3QgZW5jb2RlZFBheWxvYWQgPSBiYXNlNjR1cmwuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKTtcbiAgICB0b2tlblBhcnRzLnB1c2goZW5jb2RlZFBheWxvYWQpO1xuICAgIC8vIHByZXBhcmUgdGhlIG1lc3NhZ2VcbiAgICBjb25zdCBzaWduaW5nSW5wdXQgPSB0b2tlblBhcnRzLmpvaW4oJy4nKTtcbiAgICAvLyByZXR1cm4gdGhlIHNpZ25pbmcgaW5wdXRcbiAgICByZXR1cm4gc2lnbmluZ0lucHV0O1xufVxuZnVuY3Rpb24gY3JlYXRlVW5zZWN1cmVkVG9rZW4ocGF5bG9hZCkge1xuICAgIGNvbnN0IGhlYWRlciA9IHsgdHlwOiAnSldUJywgYWxnOiAnbm9uZScgfTtcbiAgICByZXR1cm4gY3JlYXRlU2lnbmluZ0lucHV0KHBheWxvYWQsIGhlYWRlcikgKyAnLic7XG59XG5leHBvcnRzLmNyZWF0ZVVuc2VjdXJlZFRva2VuID0gY3JlYXRlVW5zZWN1cmVkVG9rZW47XG5jbGFzcyBUb2tlblNpZ25lciB7XG4gICAgY29uc3RydWN0b3Ioc2lnbmluZ0FsZ29yaXRobSwgcmF3UHJpdmF0ZUtleSkge1xuICAgICAgICBpZiAoIShzaWduaW5nQWxnb3JpdGhtICYmIHJhd1ByaXZhdGVLZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuTWlzc2luZ1BhcmFtZXRlcnNFcnJvcignYSBzaWduaW5nIGFsZ29yaXRobSBhbmQgcHJpdmF0ZSBrZXkgYXJlIHJlcXVpcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBzaWduaW5nQWxnb3JpdGhtICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzaWduaW5nIGFsZ29yaXRobSBwYXJhbWV0ZXIgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgICAgICB9XG4gICAgICAgIHNpZ25pbmdBbGdvcml0aG0gPSBzaWduaW5nQWxnb3JpdGhtLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIGlmICghY3J5cHRvQ2xpZW50c18xLmNyeXB0b0NsaWVudHMuaGFzT3duUHJvcGVydHkoc2lnbmluZ0FsZ29yaXRobSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzaWduaW5nIGFsZ29yaXRobScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudG9rZW5UeXBlID0gJ0pXVCc7XG4gICAgICAgIHRoaXMuY3J5cHRvQ2xpZW50ID0gY3J5cHRvQ2xpZW50c18xLmNyeXB0b0NsaWVudHNbc2lnbmluZ0FsZ29yaXRobV07XG4gICAgICAgIHRoaXMucmF3UHJpdmF0ZUtleSA9IHJhd1ByaXZhdGVLZXk7XG4gICAgfVxuICAgIGhlYWRlcihoZWFkZXIgPSB7fSkge1xuICAgICAgICBjb25zdCBkZWZhdWx0SGVhZGVyID0geyB0eXA6IHRoaXMudG9rZW5UeXBlLCBhbGc6IHRoaXMuY3J5cHRvQ2xpZW50LmFsZ29yaXRobU5hbWUgfTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRIZWFkZXIsIGhlYWRlcik7XG4gICAgfVxuICAgIHNpZ24ocGF5bG9hZCwgZXhwYW5kZWQgPSBmYWxzZSwgY3VzdG9tSGVhZGVyID0ge30pIHtcbiAgICAgICAgLy8gZ2VuZXJhdGUgdGhlIHRva2VuIGhlYWRlclxuICAgICAgICBjb25zdCBoZWFkZXIgPSB0aGlzLmhlYWRlcihjdXN0b21IZWFkZXIpO1xuICAgICAgICAvLyBwcmVwYXJlIHRoZSBtZXNzYWdlIHRvIGJlIHNpZ25lZFxuICAgICAgICBjb25zdCBzaWduaW5nSW5wdXQgPSBjcmVhdGVTaWduaW5nSW5wdXQocGF5bG9hZCwgaGVhZGVyKTtcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9ICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2KShzaWduaW5nSW5wdXQpO1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVXaXRoU2lnbmVkSGFzaChwYXlsb2FkLCBleHBhbmRlZCwgaGVhZGVyLCBzaWduaW5nSW5wdXQsIHNpZ25pbmdJbnB1dEhhc2gpO1xuICAgIH1cbiAgICBzaWduQXN5bmMocGF5bG9hZCwgZXhwYW5kZWQgPSBmYWxzZSwgY3VzdG9tSGVhZGVyID0ge30pIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIC8vIGdlbmVyYXRlIHRoZSB0b2tlbiBoZWFkZXJcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMuaGVhZGVyKGN1c3RvbUhlYWRlcik7XG4gICAgICAgICAgICAvLyBwcmVwYXJlIHRoZSBtZXNzYWdlIHRvIGJlIHNpZ25lZFxuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gY3JlYXRlU2lnbmluZ0lucHV0KHBheWxvYWQsIGhlYWRlcik7XG4gICAgICAgICAgICBjb25zdCBzaWduaW5nSW5wdXRIYXNoID0geWllbGQgKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTZBc3luYykoc2lnbmluZ0lucHV0KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVdpdGhTaWduZWRIYXNoKHBheWxvYWQsIGV4cGFuZGVkLCBoZWFkZXIsIHNpZ25pbmdJbnB1dCwgc2lnbmluZ0lucHV0SGFzaCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjcmVhdGVXaXRoU2lnbmVkSGFzaChwYXlsb2FkLCBleHBhbmRlZCwgaGVhZGVyLCBzaWduaW5nSW5wdXQsIHNpZ25pbmdJbnB1dEhhc2gpIHtcbiAgICAgICAgLy8gc2lnbiB0aGUgbWVzc2FnZSBhbmQgYWRkIGluIHRoZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gdGhpcy5jcnlwdG9DbGllbnQuc2lnbkhhc2goc2lnbmluZ0lucHV0SGFzaCwgdGhpcy5yYXdQcml2YXRlS2V5KTtcbiAgICAgICAgaWYgKGV4cGFuZGVkKSB7XG4gICAgICAgICAgICBjb25zdCBzaWduZWRUb2tlbiA9IHtcbiAgICAgICAgICAgICAgICBoZWFkZXI6IFtiYXNlNjR1cmwuZW5jb2RlKEpTT04uc3RyaW5naWZ5KGhlYWRlcikpXSxcbiAgICAgICAgICAgICAgICBwYXlsb2FkOiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSxcbiAgICAgICAgICAgICAgICBzaWduYXR1cmU6IFtzaWduYXR1cmVdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBzaWduZWRUb2tlbjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbc2lnbmluZ0lucHV0LCBzaWduYXR1cmVdLmpvaW4oJy4nKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuVG9rZW5TaWduZXIgPSBUb2tlblNpZ25lcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25lci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/jsontokens/lib/verifier.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenVerifier = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nclass TokenVerifier {\n    constructor(signingAlgorithm, rawPublicKey) {\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n    verify(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, false);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, false);\n        }\n        else {\n            return false;\n        }\n    }\n    verifyAsync(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, true);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, true);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    verifyCompact(token, async) {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        // calculate the signing input hash\n        const signingInput = tokenParts[0] + '.' + tokenParts[1];\n        const performVerify = (signingInputHash) => {\n            // extract the signature as a DER array\n            const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n    verifyExpanded(token, async) {\n        const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n        let verified = true;\n        const performVerify = (signingInputHash) => {\n            token['signature'].map((signature) => {\n                const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n                const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n            return verified;\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n}\nexports.TokenVerifier = TokenVerifier;\n//# sourceMappingURL=verifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvdmVyaWZpZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGtCQUFrQixtQkFBTyxDQUFDLHFFQUFhO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLG1GQUFpQjtBQUNqRCxpQkFBaUIsbUJBQU8sQ0FBQywrREFBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQywyRkFBd0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiL1VzZXJzL2dhYnJpZWwvRGVza3RvcC9oYWNrYXRob24vRWFzeUF4U3RhY2tzLUhhY2thdGhvbi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvdmVyaWZpZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuVmVyaWZpZXIgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmwgPSByZXF1aXJlKFwiLi9iYXNlNjRVcmxcIik7XG5jb25zdCBjcnlwdG9DbGllbnRzXzEgPSByZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHMvc2hhMjU2XCIpO1xuY2xhc3MgVG9rZW5WZXJpZmllciB7XG4gICAgY29uc3RydWN0b3Ioc2lnbmluZ0FsZ29yaXRobSwgcmF3UHVibGljS2V5KSB7XG4gICAgICAgIGlmICghKHNpZ25pbmdBbGdvcml0aG0gJiYgcmF3UHVibGljS2V5KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBhbGdvcml0aG0gYW5kIHB1YmxpYyBrZXkgYXJlIHJlcXVpcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBzaWduaW5nQWxnb3JpdGhtICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgJ3NpZ25pbmcgYWxnb3JpdGhtIHBhcmFtZXRlciBtdXN0IGJlIGEgc3RyaW5nJztcbiAgICAgICAgfVxuICAgICAgICBzaWduaW5nQWxnb3JpdGhtID0gc2lnbmluZ0FsZ29yaXRobS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICBpZiAoIWNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzLmhhc093blByb3BlcnR5KHNpZ25pbmdBbGdvcml0aG0pKSB7XG4gICAgICAgICAgICB0aHJvdyAnaW52YWxpZCBzaWduaW5nIGFsZ29yaXRobSc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50b2tlblR5cGUgPSAnSldUJztcbiAgICAgICAgdGhpcy5jcnlwdG9DbGllbnQgPSBjcnlwdG9DbGllbnRzXzEuY3J5cHRvQ2xpZW50c1tzaWduaW5nQWxnb3JpdGhtXTtcbiAgICAgICAgdGhpcy5yYXdQdWJsaWNLZXkgPSByYXdQdWJsaWNLZXk7XG4gICAgfVxuICAgIHZlcmlmeSh0b2tlbikge1xuICAgICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVyaWZ5Q29tcGFjdCh0b2tlbiwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUV4cGFuZGVkKHRva2VuLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmVyaWZ5QXN5bmModG9rZW4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUNvbXBhY3QodG9rZW4sIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUV4cGFuZGVkKHRva2VuLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeUNvbXBhY3QodG9rZW4sIGFzeW5jKSB7XG4gICAgICAgIC8vIGRlY29tcG9zZSB0aGUgdG9rZW4gaW50byBwYXJ0c1xuICAgICAgICBjb25zdCB0b2tlblBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBzaWduaW5nIGlucHV0IGhhc2hcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gdG9rZW5QYXJ0c1swXSArICcuJyArIHRva2VuUGFydHNbMV07XG4gICAgICAgIGNvbnN0IHBlcmZvcm1WZXJpZnkgPSAoc2lnbmluZ0lucHV0SGFzaCkgPT4ge1xuICAgICAgICAgICAgLy8gZXh0cmFjdCB0aGUgc2lnbmF0dXJlIGFzIGEgREVSIGFycmF5XG4gICAgICAgICAgICBjb25zdCBkZXJTaWduYXR1cmVCeXRlcyA9IHRoaXMuY3J5cHRvQ2xpZW50LmxvYWRTaWduYXR1cmUodG9rZW5QYXJ0c1syXSk7XG4gICAgICAgICAgICAvLyB2ZXJpZnkgdGhlIHNpZ25lZCBoYXNoXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcnlwdG9DbGllbnQudmVyaWZ5SGFzaChzaWduaW5nSW5wdXRIYXNoLCBkZXJTaWduYXR1cmVCeXRlcywgdGhpcy5yYXdQdWJsaWNLZXkpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoYXN5bmMpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1NkFzeW5jKShzaWduaW5nSW5wdXQpLnRoZW4oc2lnbmluZ0lucHV0SGFzaCA9PiBwZXJmb3JtVmVyaWZ5KHNpZ25pbmdJbnB1dEhhc2gpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dEhhc2ggPSAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1Nikoc2lnbmluZ0lucHV0KTtcbiAgICAgICAgICAgIHJldHVybiBwZXJmb3JtVmVyaWZ5KHNpZ25pbmdJbnB1dEhhc2gpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeUV4cGFuZGVkKHRva2VuLCBhc3luYykge1xuICAgICAgICBjb25zdCBzaWduaW5nSW5wdXQgPSBbdG9rZW5bJ2hlYWRlciddLmpvaW4oJy4nKSwgYmFzZTY0dXJsLmVuY29kZSh0b2tlblsncGF5bG9hZCddKV0uam9pbignLicpO1xuICAgICAgICBsZXQgdmVyaWZpZWQgPSB0cnVlO1xuICAgICAgICBjb25zdCBwZXJmb3JtVmVyaWZ5ID0gKHNpZ25pbmdJbnB1dEhhc2gpID0+IHtcbiAgICAgICAgICAgIHRva2VuWydzaWduYXR1cmUnXS5tYXAoKHNpZ25hdHVyZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRlclNpZ25hdHVyZUJ5dGVzID0gdGhpcy5jcnlwdG9DbGllbnQubG9hZFNpZ25hdHVyZShzaWduYXR1cmUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25hdHVyZVZlcmlmaWVkID0gdGhpcy5jcnlwdG9DbGllbnQudmVyaWZ5SGFzaChzaWduaW5nSW5wdXRIYXNoLCBkZXJTaWduYXR1cmVCeXRlcywgdGhpcy5yYXdQdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIGlmICghc2lnbmF0dXJlVmVyaWZpZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmVyaWZpZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB2ZXJpZmllZDtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGFzeW5jKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTZBc3luYykoc2lnbmluZ0lucHV0KS50aGVuKHNpZ25pbmdJbnB1dEhhc2ggPT4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzaWduaW5nSW5wdXRIYXNoID0gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTYpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuVG9rZW5WZXJpZmllciA9IFRva2VuVmVyaWZpZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJpZmllci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/verifier.js\n");

/***/ })

};
;